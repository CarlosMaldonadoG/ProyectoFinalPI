.contenedor{
    background: bisque;
    display: grid;
    grid-template-columns: 60% 40%;
   

}
.contenedor-op{
    background: hotpink;
}
.item-dos, .item-tres, .item-cuatro, .item-cinco, .item-seis, .item-siete{
    display: grid;
    grid-template-columns: 40% 40%;
    text-align: center;
    font-size: 20px;
    font-family: 'Inconsolata', monospace;
    font-weight: bold;
}
.canavas{
    border: 5px solid gray;
}
button:hover{
    border: 2px solid red;
}
.........................
.contenedor{
    background: bisque;
    display: grid;
    grid-template-columns: 45% 55%;
   

}
.contenedor-tres{
    background: cornflowerblue;
}
.contenedor-dos{
    background: crimson;
}
.item-uno{
    text-align: center;
    font-size: 24px;
    font-family: 'Inconsolata', monospace;
    font-weight: bold;
}
.item-dos, .item-tres, .item-cuatro, .item-cinco, .item-seis, .item-siete{
    display: grid;
    grid-template-columns: 40% 40%;
    text-align: center;
    font-size: 20px;
    font-family: 'Inconsolata', monospace;
    font-weight: bold;
}
.canavas{
    border: 5px solid gray;
}
button:hover{
    border: 2px solid red;
}
---------------
.contenedor{
    background: bisque;
    display: grid;
    grid-template-columns: 45% 55%;
    height: 600px;
 }
.contenedor-tres{
    background: cornflowerblue;
}
.contenedor-dos{
    background: crimson;
}
.canvasdb{
    padding: 20px 20px 20px 55px;
    background: gray;
}
.canavas{
    border: 5px solid black;
}
.item-uno{
    text-align: center;
    font-size: 24px;
    font-family: 'Inconsolata', monospace;
    font-weight: bold;
}
.item-dos, .item-tres, .item-cuatro, .item-cinco, .item-seis, .item-siete{
    display: grid;
    grid-template-columns: 40% 40%;
    text-align: center;
    font-size: 20px;
    font-family: 'Inconsolata', monospace;
    font-weight: bold;
}
button:hover{
    border: 2px solid red;
}



----------------------------
.contenedor{
    background: bisque;
    display: grid;
    grid-template-columns: 45% 55%;
    height: 600px;
 }
.contenedor-tres{
    background: gray;
}
.contenedor-dos{
    background: crimson;
}
.canvasdb{
    padding: 20px 20px 20px 55px;
    background: gray;
}
.canavas{
    border: 5px solid black;
}
.contenidos{
    display: grid;
    grid-template-columns: 50% 50%;
}
.button-uno{
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 15px;
}
.button-dos{
    display: flex;
    justify-content: left;
    align-items: center;
    margin: 15px;
}
button{
    font-size: 18px;
    font-family: 'Inconsolata', monospace;
    font-weight: bold;
}
.item-uno{
    text-align: center;
    font-size: 28px;
    font-family: 'Inconsolata', monospace;
    font-weight: bold;
}
.item-dos, .item-tres, .item-cuatro, .item-cinco, .item-seis, .item-siete{
    display: grid;
    grid-template-columns: 40% 40%;
    text-align: center;
    font-size: 22px;
    font-family: 'Inconsolata', monospace;
    font-weight: bold;
}
button:hover{
    border: 2px solid red;
}



.contenedor{
    background: bisque;
    display: grid;
    grid-template-columns: 45% 55%;
    height: 600px;
 }
.contenedor-tres{
    background: gray;
}
.contenedor-dos{
    background: crimson;
}
.canvasdb{
    padding: 20px 20px 20px 55px;
    background: gray;
}
.canavas{
    border: 4px solid black;
}
.contenidos{
    display: grid;
    grid-template-columns: 50% 50%;
}
.button-uno{
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 15px;
}
.button-dos{
    display: flex;
    justify-content: left;
    align-items: center;
    margin: 15px;
}
button{
    font-size: 18px;
    font-family: 'Inconsolata', monospace;
    font-weight: bold;
}
.item-uno{
    text-align: center;
    font-size: 28px;
    font-family: 'Inconsolata', monospace;
    font-weight: bold;
}
.item-dos, .item-tres, .item-cuatro, .item-cinco, .item-seis, .item-siete{
    display: grid;
    grid-template-columns: 40% 40%;
    text-align: center;
    font-size: 22px;
    font-family: 'Inconsolata', monospace;
    font-weight: bold;
}
button:hover{
    border: 2px solid red;
}
----------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Proyecto Procesamiento de Imagenes</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inconsolata&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="contenedor">
        <div class="contenedor-dos">
            <div class="canvasdb">
                <canvas class="canavas" id="canvas1" width="500" height="500"></canvas>
            </div>
            
            <div class="contenidos">
                <div class="button-uno">
                    <button id="op-dibujar" class="btn-dib" type="button">Iniciar Dibujo</button>
                </div>
                <div class="button-dos">
                    <button id="op-borrar" class="btn-bor" type="button">Borrar Dibujo</button>
                </div>
            </div>
        </div>
        <div class="contenedor-tres">
            <div class="item-uno">
                <p class="texto">Crea tu propio dise√±o</p>
            </div>
            <div id="disenio" class="contenedor-op">
                <div class="item-dos">
                    <p class="color-uno"> Color de fondo</p>
                    <input type="color" id="colorpicker" oninput="colorFill = this.value">
                </div>
                <div class="item-tres">
                    <p class="color-uno"> Color de relleno</p>
                    <input type="color" id="colorpickerdos" oninput="colorStroke = this.value">
                </div>
                <div class="item-cuatro">
                    <p class="color-uno">Escala</p>
                    <input type="number" id="numerotype" class="type" oninput="scale = this.value">
                </div>
                <div class="item-cinco">
                    <p class="color-uno">Numero de la base</p>
                    <input type="number" id="numerotypedos" class="type-dos" oninput="numeroAg = this.value">
                </div>
                <div class="item-seis">
                    <p class="color-uno">Linewich</p>
                    <input type="number" id="numerotypetres" class="type-dos" oninput="linewich = this.value">
                </div>
                <div class="item-siete">
                    <p class="color-uno">Numero de la fonda</p>
                    <input type="number" id="numerotypecuatro" class="type-dos" oninput="numeroVl = this.value">
                </div>
            </div>
        </div>
    </div>
       <script src="script.js"></script>
   </body>
</html>
----------------------------
const canvas = document.getElementById('canvas1');
const ctx = canvas.getContext('2d');

ctx.globalCompositeOperation = 'destination-over';

let number = 0;
let scale = 10;
let numeroAg = 137;
let lineWich = 4;
let numeroVl = 10;
let colorFill = "black";
let colorStroke = "red";


function drawFlower(){
    let angle = number * numeroAg;
    let radious = scale * Math.sqrt(number);
    let positionX = radious * Math.sin(angle) + 250;
    let positionY = radious * Math.cos(angle) + 250;

   
    ctx.fillStyle = colorFill;
    ctx.strokeStyle = colorStroke;
    ctx.lineWidth = lineWich;
    ctx.beginPath();
    ctx.arc(positionX, positionY, numeroVl, 0, Math.PI*2);
    ctx.closePath();
    ctx.fill();
    ctx.stroke();

    number++;
    console.log(number);
}

function animate(){
    //draw each frame
    //ctx.clearRect(0, 0, canvas.width, canvas.height);
    drawFlower();
    if (number > 400) return;
    requestAnimationFrame(animate);
}

function borrarCanvas(){
    ctx.clearRect(0, 0, canvas.width, canvas.height);//borramos el canvas para volver a dibujar
    number = 0;/*restablecer el valor de la variable numer es muy importante, ya que si no se hace continua con incremento,
    lo que lleva seguir dibujando despues del valor 401,pero como tenemos un if que solo nos deja dibujar hasta 401 al querer 
    dibujar de nuevo se dibuja circulo por circulo por la condicion (se continua 402, 403, ... n) y el clearRect pareciera que no funcionara.
    Entonces al restablecer la variable number a 0 esto permite dibujar de nuevo otra vez. Estuve medio dia con este error, usando diversos 
    metodos para borrar un canvas y el probema era la variable number que funciona como contador*/
    }

document.getElementById("op-dibujar").addEventListener('click', animate, false);
document.getElementById("op-borrar").addEventListener('click', borrarCanvas, false);

